//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AGASQLI.ServiceNotification {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceNotification.INotification")]
    public interface INotification {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotification/NotifierCollaborateur", ReplyAction="http://tempuri.org/INotification/NotifierCollaborateurResponse")]
        void NotifierCollaborateur(AGA.Common.DTO.Models.Demande demande);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotification/NotifierCollaborateur", ReplyAction="http://tempuri.org/INotification/NotifierCollaborateurResponse")]
        System.Threading.Tasks.Task NotifierCollaborateurAsync(AGA.Common.DTO.Models.Demande demande);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotification/NotifierAssistantesDemandesEnAttente", ReplyAction="http://tempuri.org/INotification/NotifierAssistantesDemandesEnAttenteResponse")]
        void NotifierAssistantesDemandesEnAttente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotification/NotifierAssistantesDemandesEnAttente", ReplyAction="http://tempuri.org/INotification/NotifierAssistantesDemandesEnAttenteResponse")]
        System.Threading.Tasks.Task NotifierAssistantesDemandesEnAttenteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotification/NotifierResponsable", ReplyAction="http://tempuri.org/INotification/NotifierResponsableResponse")]
        void NotifierResponsable(AGA.Common.DTO.Models.Demande demande);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotification/NotifierResponsable", ReplyAction="http://tempuri.org/INotification/NotifierResponsableResponse")]
        System.Threading.Tasks.Task NotifierResponsableAsync(AGA.Common.DTO.Models.Demande demande);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificationChannel : AGASQLI.ServiceNotification.INotification, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationClient : System.ServiceModel.ClientBase<AGASQLI.ServiceNotification.INotification>, AGASQLI.ServiceNotification.INotification {
        
        public NotificationClient() {
        }
        
        public NotificationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotificationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void NotifierCollaborateur(AGA.Common.DTO.Models.Demande demande) {
            base.Channel.NotifierCollaborateur(demande);
        }
        
        public System.Threading.Tasks.Task NotifierCollaborateurAsync(AGA.Common.DTO.Models.Demande demande) {
            return base.Channel.NotifierCollaborateurAsync(demande);
        }
        
        public void NotifierAssistantesDemandesEnAttente() {
            base.Channel.NotifierAssistantesDemandesEnAttente();
        }
        
        public System.Threading.Tasks.Task NotifierAssistantesDemandesEnAttenteAsync() {
            return base.Channel.NotifierAssistantesDemandesEnAttenteAsync();
        }
        
        public void NotifierResponsable(AGA.Common.DTO.Models.Demande demande) {
            base.Channel.NotifierResponsable(demande);
        }
        
        public System.Threading.Tasks.Task NotifierResponsableAsync(AGA.Common.DTO.Models.Demande demande) {
            return base.Channel.NotifierResponsableAsync(demande);
        }
    }
}
